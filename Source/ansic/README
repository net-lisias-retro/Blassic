
	NOTES ABOUT CROSS-COMPILING BLASSIC

The character set used in graphics mode is defined in the file charset.def,
and the program gencharset generates charset.cpp based on it, and
gencharset is generated by compiling gencharset.cpp. When cross-compiling
gencharset is compiled for the target machine, and thus can't be executed.
To solve the problem, after make fails do "touch charset.cpp" and do make
again. This works because the current charset.cpp in included in the
distribution files and does not need to be generated . If you modify
charset.def you need to compile gencharset.cpp for the buliding machine
manually.

In my cross-compiling environemnt for the Yopy PDA (you can download it
from www.yopydeveloper.org) I configure blassic with the following:

./configure --host=arm-linux CPPFLAGS=-I/opt/arm-linux/include/g++-3 \
	LDFLAGS=-L/opt/arm-linux/lib


		*	*	*


	BASIC /bay'-sic/ n. 

A programming language, originally designed for Dartmouth's experimental
timesharing system in the early 1960s, which for many years was the leading
cause of brain damage in proto-hackers. Edsger W. Dijkstra observed in
"Selected Writings on Computing: A Personal Perspective" that "It is
practically impossible to teach good programming style to students that have
had prior exposure to BASIC: as potential programmers they are mentally
mutilated beyond hope of regeneration." This is another case (like Pascal)
of the cascading lossage that happens when a language deliberately designed
as an educational toy gets taken too seriously. A novice can write short
BASIC programs (on the order of 10-20 lines) very easily; writing anything
longer (a) is very painful, and (b) encourages bad habits that will make it
harder to use more powerful languages well. This wouldn't be so bad if
historical accidents hadn't made BASIC so common on low-end micros in the
1980s. As it is, it probably ruined tens of thousands of potential wizards.

	"The new hacker's dictionary"

		*****************************
		**  You have been warned!  **
		*****************************


			*	*	*


	To run the test of dynamic linking of functions do:

		make testdl.so

		./blassic testdl

	On windows with Borland C++ Builder build the project testdl
	and do:

		blassic testdl

	There is no other documentation than the testdl.cpp source, sorry.
